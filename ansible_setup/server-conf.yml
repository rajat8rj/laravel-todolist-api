---

- name: Setup Web Server Laravel
  hosts: app
  become: true
  vars:
    php_version: "8.3"

  tasks:
   - name: Update apt package list
     apt:
      update_cache: yes

   - name: Install prerequisites for PHP repository
     apt:
      name: software-properties-common
      state: present

   - name: Add PHP PPA
     apt_repository:
      repo: ppa:ondrej/php
      state: present
      update_cache: yes

   - name: Install PHP, PHP-FPM, Nginx, MySQL, Redis, Composer, and required PHP extensions
     apt:
      name:
        - "php{{ php_version }}"
        - "php{{ php_version }}-fpm"
        - "php{{ php_version }}-mysql"
        - "php{{ php_version }}-mbstring"
        - "php{{ php_version }}-xml"
        - "php{{ php_version }}-dom"
        - "php{{ php_version }}-curl"
        - "php{{ php_version }}-zip"
        - "php{{ php_version }}-intl"
        - nginx
        - composer
      state: present

   - name: Install Python MySQL client library
     apt:
      name: python3-pymysql
      state: present

   - name: Copy the nginx.conf from template
     template:
       src: nginx.conf.j2
       dest: /etc/nginx/nginx.conf
       owner: root
       group: root
       mode: '0644'
     notify:
       - Restart nginx

   - name: Restart PHP-FPM and Nginx to apply changes
     service:
      name: "{{ item }}"
      state: restarted
     loop:
      - "php{{ php_version }}-fpm"
      - nginx

- name: Setup mysql server
  hosts: db
  become: true

  vars:
    db_name: "laravel"
    db_user: "app-db-user"
    db_password: "pass"
    mysql_root_password: ""

  tasks:
    - name: Update apt package list
      apt:
        update_cache: yes

    - name: Install Python MySQL client library
      apt:
        name: python3-pymysql
        state: present

    - name: Install mysql
      apt:
        name:
          - mysql-server
        state: present

    - name: Ensure MySQL service is running and enabled
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Set MySQL root password and authenticate with mysql_native_password
      mysql_user:
        name: vmadmin
        host: localhost
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL,GRANT"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present
      notify: Restart MySQL

    - name: Create MySQL database
      mysql_db:
        name: "{{ db_name }}"
        state: present
        login_user: vmadmin
        login_password: "{{ mysql_root_password }}"

    - name: Create MySQL user with all privileges
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL"
        host: "%"
        state: present
        login_user: vmadmin
        login_password: "{{ mysql_root_password }}"

  handlers:
    - name: Restart MySQL
      service:
        name: mysql
        state: restarted

- name: Setup redis server
  hosts: redis
  become: true

  tasks:
    - name: Update apt package list
      apt:
        update_cache: yes

    - name: Install redis
      apt:
        name:
          - redis-server
        state: present

    - name: Ensure redis service is running and enabled
      service:
        name: redis-server
        state: started
        enabled: yes

  handlers:
    - name: Restart redis
      service:
        name: redis-server
        state: restarted
